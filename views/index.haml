- title "Open Source Telephony Application Framework", false

.home
  .slide.header-center.gradient-down-color{style: "height: auto; margin-top: -10px;"}
    #ahnconf.full-width
      %a{href: "http://adhearsionconf.com"}
        .conf.left
          %img{:src => "/images/ahnconf_2013_transp.png"}
        .conf.center
          <
        .conf.right
          THE place to talk about 
          %i very 
          powerful & sophisticated 
          %span.pop voice integrations
  .slide.header-center
    .full-width{:style => "padding-top: 15px;"}
      .center
        %h1 Adhearsion
      .one-fourth.left
        .faded-to-right
        .icon-to-left
          %img{:src => "/images/icons/id.png", :width => "24", :height => "24", :alt => ""}
        %h3 What is it?
        %p.limit Adhearsion is a full-featured framework for the development of applications which interact with or control voice communications. It facilitates the creation of complex applications with ease, providing a simple API.

        .faded-to-right

        .action-buttons-left.clearfix
          %a.btn-big-action-fixed{:href => "/download", :id => "trigger1_up"}
            %span
              %img{:src => "/images/icons/button-arrow.png", :width => "30", :height => "30", :alt => ""}
              Download
          #tip1_up{:style => "display:none;"}
            .tip{:style => "width:240px;"}
              %h4 Where can I get it?
              %p Adhearsion is available in ways suitable for users and developers of the framework...
              %img.vm{:src => "/images/icons/download-small.png", :width => "16", :height => "16", :alt => ""}
              &nbsp;&nbsp; as a gem:
              %a{:href => "http://rubygems.org/gems/adhearsion"} on RubyGems
              %br
              .separator
              %img.vm{:src => "/images/icons/download-small.png", :width => "16", :height => "16", :alt => ""}
              &nbsp;&nbsp; as source:
              %a{:href => "https://github.com/adhearsion/adhearsion"} on Github
      .two-fourth.rel
        .center
          %h3.mb20 Open Source Voice Application Framework
        %pre{:class => "brush: ruby; gutter: false"}
          :preserve
            class MyController < Adhearsion::CallController
              def run
                answer
                resp = ask "How many woodchucks?", :limit => 1
                say "You said \#{resp}. That's obviously wrong!"
              end
            end
      .one-fourth.right
        .faded-to-left
        .icon-to-right
          %img{:src => "/images/icons/wand.png", :width => "24", :height => "24", :alt => ""}
        %h3 Who is it for?
        %p.limit Voice application developers, Ruby developers, web developers, voice service providers, telephony networks. Everyone can benefit from Adhearsion as part of their application stack.
        .faded-to-right
        .action-buttons-right.clearfix
          %a.btn-big-action-fixed{:href => "/docs"}
            %span Documentation

  .gradient-up-darker-with-border
    .full-width.pt30.pb30
      .one-fourth
        %h2.mb20 Latest News
        %img{:src => "/images/icons/users.png", :width => "126", :alt => ""}

      - @blog_posts[0,3].each do |blog_post|
        .one-fourth
          %h3
            %a{:href => blog_post[:url]}= blog_post[:title]
          %p
            = blog_post[:description][0,120]
            \...
          %cite
            %abbr.timeago{:title => blog_post[:date]}= blog_post[:date]
      .clear

  .features.gradient-up-with-border
    .full-width
      .two-third
        %h2 Some Use Cases
        %ul.feature-list.mb0
          %li
            %a.icon{:href => "#"}
              %img{:src => "/images/icons/tools.png", :width => "52", :height => "52", :alt => ""}
            .text
              %h3 IVRs
              %p With a comprehensive menu system, and the availability of data from many sources within the application logic, Adhearsion works very well for creating highly dynamic interactive voice response systems.

          %li.last
            %a.icon{:href => "#"}
              %img{:src => "/images/icons/wand.png", :width => "52", :height => "52", :alt => ""}
            .text
              %h3 Call Centre Automation
              %p Dynamic call routing, integration with databases and CRM software, screen-pops, call monitoring & flexible media routing. Adhearsion fits into a Call Centre stack perfectly, and has much lower operational costs than expensive proprietary solutions.

          %li
            %a.icon{:href => "#"}
              %img{:src => "/images/icons/key.png", :width => "52", :height => "52", :alt => ""}
            .text
              %h3 Data Gathering
              %p Adhearsion's integration with many types of database, and its ability to dynamically perform output and input operations lends itself to gathering information from a caller for storage and later analysis, such as a survey.

          %li.last
            %a.icon{:href => "#"}
              %img{:src => "/images/icons/network.png", :width => "52", :height => "52", :alt => ""}
            .text
              %h3 Voice 2.0
              %p Modern voice applications do far more than those of the past and integrate with many other technologies. Adhearsion makes all of this possible with the wide range of tools available to a Ruby developer.

        .clear

      .one-third-last
        %h2 Features
        %ul
          %li
            Simple
            %strong Ruby
            code
          %li
            Flexible
            %strong CallControllers
            to handle calls
          %li
            High-level
            %strong media handling
            constructs
          %li
            Simple
            %strong interaction between calls
          %li
            %strong Self-documenting
            configuration engine
          %li
            Support for
            %strong plugins
            and other code reuse
          %li
            %strong Integration
            with databases, web APIs, etc
          %li
            %strong Event monitoring,
            async communication

        .clear
      .clear

%a{:href => "#", :id => "main-nav-active", :style => "display:none;"} #main-nav-home
